name: CI

on: [push]
#   push:
#     branches: [ master, actions ]
#   pull_request:
#     branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    
    - name: Install Dependencies
      run: npm ci

    - name: Compile Typescript
      run: npm run build

    - name: Lint
      run: |
        npm run lint
        npm run prettier:fix
        
    - name: Unit Test
      run: npm run test:unit
     
    - name: Generate Docs
      run: npm run publish
      
    - name: Publish to GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: public
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#   lint:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Use Node.js
#       uses: actions/setup-node@v1
#       with:
#         node-version: '12.x'
    
#     - name: Cache node modules
#       id: cache-npm
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-node-modules
#       with:
#         # npm cache files are stored in `~/.npm` on Linux/macOS
#         path: ~/.npm
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
    
#     - name: Install Dependencies
#       run: npm ci

#     - name: Lint
#       run: |
#         npm run lint
#         npm run prettier:fix
       
#   publish:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
    
#     - name: Use Node.js
#       uses: actions/setup-node@v1
#       with:
#         node-version: '12.x'
        
#     - name: Cache node modules
#       id: cache-npm
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-node-modules
#       with:
#         # npm cache files are stored in `~/.npm` on Linux/macOS
#         path: ~/.npm
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
          
#     - name: Install Dependencies
#       run: npm ci
        
#     - name: Generate Docs
#       run: npm run publish
      
#     - name: Publish to GitHub Pages
#       if: success()
#       uses: crazy-max/ghaction-github-pages@v2
#       with:
#         target_branch: gh-pages
#         build_dir: public
#       env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#   test:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
    
#     - name: Use Node.js
#       uses: actions/setup-node@v1
#       with:
#         node-version: '12.x'
    
#     - name: Cache node modules
#       id: cache-npm
#       uses: actions/cache@v2
#       env:
#         cache-name: cache-node-modules
#       with:
#         # npm cache files are stored in `~/.npm` on Linux/macOS
#         path: ~/.npm
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-
    
#     - name: Install Dependencies
#       run: npm ci

#     - name: Unit Test
#       run: npm run test:unit
    
#     - name: Integration Tests with Mocks
#       env:
#         GITLAB_BOT_ACCOUNT_NAME: GitRDoneBot
#       run: npm run test:mock
